import java.util.Arrays;

class Solution {
    public int[] merge(int[] heights) {
        int n = heights.length;
        if (n < 2) return heights;
        int mid = n/2;
        int left_array[] = new int[mid];
        int right_array[] = new int[n - mid];
        for(int i=0;i<mid;i++){
            left_array[i] = heights[i];
        }
        for(int j=mid;j<n;j++){
            right_array[j-mid] = heights[j]; 
        }
        merge(left_array);
        merge(right_array);
        
        return join(left_array,right_array);
        
    }
    public int[] join(int[] left_array, int[] right_array){
        int left_size = left_array.length;
        int right_size = right_array.length;
        int[] newArray = new int[left_size + right_size];
        int i=0,j=0,k=0;
        while(i<left_size&&j<right_size){
            if(left_array[i] <= right_array[j]){
                newArray[k] = left_array[i];
                i++;
            }else{
                newArray[k] = right_array[j];
                j++;
            }
            k++;
        }
        while(i < left_size){
            newArray[k] = left_array[i];
            i++;
            k++;
        }
        while(j < right_size){
            newArray[k] = right_array[j];
            j++;
            k++;
        }
        return newArray;
    }
}

public class Main
{
	public static void main(String[] args) {
		Solution sol = new Solution();
		int arr[] = {10,2,4,78,53,2,1};
		System.out.println(sol.merge(arr));
	}
}
